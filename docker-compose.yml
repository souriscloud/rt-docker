version: "3.8"

services:
  rt:
    build:
      context: .
    image: valuo/request-tracker:latest
    restart: unless-stopped
    depends_on:
      - db
    volumes:
      - ./RT_SiteConfig.pm:/opt/rt5/etc/RT_SiteConfig.pm:rw
      - ./msmtp/msmtp.conf:/etc/msmtprc:rw
      - ./msmtp/:/msmtp:rw
      - ./getmail/getmailrc:/getmail/getmailrc:rw
      - ./gpg/:/opt/rt5/var/data/gpg
      - ./smime/:/opt/rt5/var/data/smime
      - ./shredder/:/opt/rt5/var/data/RT-Shredder
      - /etc/localtime:/etc/localtime:ro
    # make the host available inside the image
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - net

  cron:
    build:
      context: .
    image: valuo/request-tracker:latest
    restart: unless-stopped
    # the cron daemon needs to run as root
    user: root
    # command: [ "cron", "-f", "-l", "2" ]
    command: [ "cron", "&&", "tail", "-f", "/var/log/cron.log" ]
    # command: [ "tail", "-f", "/dev/null" ]
    # no need for init here
    entrypoint: ""
    depends_on:
      - rt
      - db
      # we send rt-mailgate over to nginx
      - nginx
    volumes:
      - ./RT_SiteConfig.pm:/opt/rt5/etc/RT_SiteConfig.pm:ro
      - ./msmtp/msmtp.conf:/etc/msmtprc:ro
      - ./msmtp/:/msmtp:ro
      - ./getmail/getmailrc:/getmail/getmailrc:ro
      - ./gpg/:/opt/rt5/var/data/gpg
      - ./smime/:/opt/rt5/var/data/smime
      # - ./crontab:/var/spool/cron/crontabs/rt:rw
      - ./crontab:/etc/cron.d/rt:rw
      - ./cron/:/cron:rw
      - ./shredder/:/opt/rt5/var/data/RT-Shredder
      - /etc/localtime:/etc/localtime:ro
    # make the host available inside the image
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - net

  nginx:
    build:
      context: nginx
    ports:
      - "12341:80"
    depends_on:
      - rt
      - db
    volumes:
      - ./nginx/certs/:/certs/:ro
      - ./nginx/startup-scripts/:/docker-entrypoint.d/:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - net
  
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: rt
      POSTGRES_USER: rt
      POSTGRES_PASSWORD: password
    volumes:
      - ./db_data/data:/var/lib/postgresql/data
    # ports:
    #   - "12342:5432"
    networks:
      - net

networks:
  net:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br_rt
